{"title":"","date":"2024-06-21T03:20:47.813Z","date_formatted":{"ll":"Jun 21, 2024","L":"06/21/2024","MM-DD":"06-21"},"updated":"2024-06-20T19:20:47.813Z","content":"<h1 id=\"contributors\">Contributors<a title=\"#contributors\" href=\"#contributors\"></a></h1>\n<p>OpenNMT-py is a community developed project and we love developer contributions.</p>\n<h2 id=\"guidelines\">Guidelines<a title=\"#guidelines\" href=\"#guidelines\"></a></h2>\n<p>Before sending a PR, please do this checklist first:</p>\n<ul>\n<li>Please run <code>onmt/tests/pull_request_chk.sh</code> and fix any errors. When adding new functionality, also add tests to this script. Included checks:\n<ol>\n<li>flake8 check for coding style;</li>\n<li>unittest;</li>\n<li>continuous integration tests listed in <code>.travis.yml</code>.</li>\n</ol>\n</li>\n<li>When adding/modifying class constructor, please make the arguments as same naming style as its superclass in PyTorch.</li>\n<li>If your change is based on a paper, please include a clear comment and reference in the code (more on that below).</li>\n</ul>\n<h3 id=\"docstrings\">Docstrings<a title=\"#docstrings\" href=\"#docstrings\"></a></h3>\n<p>Above all, try to follow the Google docstring format<br>\n(<a href=\"https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html\" target=\"_blank\">Napoleon example</a>,<br>\n<a href=\"http://google.github.io/styleguide/pyguide.html\" target=\"_blank\">Google styleguide</a>).<br>\nThis makes it easy to include your contributions in the Sphinx documentation. And, do feel free<br>\nto autodoc your contributions in the API <code>.rst</code> files in the <code>docs/source</code> folder! If you do, check that<br>\nyour additions look right.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> docs</span><br><span class=\"line\"><span class=\"comment\"># install some dependencies if necessary:</span></span><br><span class=\"line\"><span class=\"comment\"># recommonmark, sphinx_rtd_theme, sphinxcontrib-bibtex</span></span><br><span class=\"line\">make html</span><br><span class=\"line\">firefox build/html/main.html  <span class=\"comment\"># or your browser of choice</span></span><br></pre></td></tr></table></figure>\n<p>Some particular advice:</p>\n<ul>\n<li>\n<p>Try to follow Python 3 <a href=\"https://docs.python.org/3/library/typing.html\" target=\"_blank\"><code>typing</code> module</a> conventions when documenting types.</p>\n<ul>\n<li>Exception: use “or” instead of unions for more readability</li>\n<li>For external types, use the full “import name”. Common abbreviations (e.g. <code>np</code>) are acceptable.<br>\nFor <code>torch.Tensor</code> types, the <code>torch.</code> is optional.</li>\n<li>Please don’t use tics like <code>(`str`)</code> or rst directives like <code>(:obj:`str`)</code>. Napoleon handles types<br>\nvery well without additional help, so avoid the clutter.</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://stackoverflow.com/questions/29221551/can-sphinx-napoleon-document-function-returning-multiple-arguments\" target=\"_blank\">Google docstrings don’t support multiple returns</a>.<br>\nFor multiple returns, the following works well with Sphinx and is still very readable.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">foo</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;This is my docstring.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        a (object): Something.</span></span><br><span class=\"line\"><span class=\"string\">        b (class): Another thing.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        (object, class):</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        * a: Something or rather with a long</span></span><br><span class=\"line\"><span class=\"string\">          description that spills over.</span></span><br><span class=\"line\"><span class=\"string\">        * b: And another thing.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a, b</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>When citing a paper, avoid directly linking in the docstring! Add a Bibtex entry to <code>docs/source/refs.bib</code>.<br>\nE.g., to cite “Attention Is All You Need”, visit <a href=\"https://arxiv.org/abs/1706.03762\" target=\"_blank\">arXiv</a>, choose the<br>\n<a href=\"https://dblp.uni-trier.de/rec/bibtex/journals/corr/VaswaniSPUJGKP17\" target=\"_blank\">bibtext</a> link, search <code>docs/source/refs.bib</code><br>\nusing <code>CTRL-F</code> for <code>DBLP:journals/corr/VaswaniSPUJGKP17</code>, and if you do not find it then copy-paste the<br>\ncitation into <code>refs.bib</code>. Then, in your docstring, use <code>:cite:`DBLP:journals/corr/VaswaniSPUJGKP17` </code>.</p>\n<ul>\n<li>However, a link is better than nothing.</li>\n</ul>\n</li>\n<li>\n<p>Please document tensor shapes. Prefer the format</p>\n<figure class=\"highlight plaintext\"><figcaption><span>b, c)`` ```. This style is easy to read, allows using ``x`` for multplication, and is common</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  (PyTorch uses a few variations on the parentheses format, AllenNLP uses exactly this format, Fairseq uses</span><br><span class=\"line\">  the parentheses format with single ticks).</span><br><span class=\"line\">    - Again, a different style is better than no shape documentation.</span><br><span class=\"line\">- Please avoid unnecessary space characters, try to capitalize, and try to punctuate.</span><br><span class=\"line\"></span><br><span class=\"line\">  For multi-line docstrings, add a blank line after the closing ``&quot;&quot;&quot;``.</span><br><span class=\"line\">  Don&#x27;t use a blank line before the closing quotes.</span><br><span class=\"line\"></span><br><span class=\"line\">  ``&quot;&quot;&quot; not this &quot;&quot;&quot;`` ``&quot;&quot;&quot;This.&quot;&quot;&quot;``</span><br><span class=\"line\"></span><br><span class=\"line\">  ```python</span><br><span class=\"line\">  &quot;&quot;&quot;</span><br><span class=\"line\">      Not this.</span><br><span class=\"line\">  &quot;&quot;&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;This.&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>This note is the least important. Focus on content first, but remember that consistent docs look good.</p>\n</li>\n<li>\n<p>Be sensible about the first line. Generally, one stand-alone summary line (per the Google guidelines) is good.<br>\nSometimes, it’s better to cut directly to the args or an extended description. It’s always acceptable to have a<br>\n“trailing” citation.</p>\n</li>\n</ul>\n","link":"links/NLP_ability/深度学习自然语言处理/深度学习自然语言处理/机器翻译/OpenNMT-py/CONTRIBUTING","comments":true,"plink":"http://www.ephesus.top/links/NLP_ability/深度学习自然语言处理/深度学习自然语言处理/机器翻译/OpenNMT-py/CONTRIBUTING/","toc":[{"id":"contributors","title":"Contributors","index":"1","children":[{"id":"guidelines","title":"Guidelines","index":"1.1","children":[{"id":"docstrings","title":"Docstrings","index":"1.1.1"}]}]}],"reward":true}