{"title":"","date":"2024-06-21T03:20:47.973Z","date_formatted":{"ll":"Jun 21, 2024","L":"06/21/2024","MM-DD":"06-21"},"updated":"2024-06-20T19:20:47.973Z","content":"<h1 id=\"translation\">Translation<a title=\"#translation\" href=\"#translation\"></a></h1>\n<p>The example below uses the Moses tokenizer (<a href=\"http://www.statmt.org/moses/\" target=\"_blank\">http://www.statmt.org/moses/</a>) to prepare the data and the moses BLEU script for evaluation. This example if for training for the WMT’16 Multimodal Translation task (<a href=\"http://www.statmt.org/wmt16/multimodal-task.html\" target=\"_blank\">http://www.statmt.org/wmt16/multimodal-task.html</a>).</p>\n<p>Step 0. Download the data.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p data/multi30k</span><br><span class=\"line\">wget http://www.quest.dcs.shef.ac.uk/wmt16_files_mmt/training.tar.gz &amp;&amp;  tar -xf training.tar.gz -C data/multi30k &amp;&amp; <span class=\"built_in\">rm</span> training.tar.gz</span><br><span class=\"line\">wget http://www.quest.dcs.shef.ac.uk/wmt16_files_mmt/validation.tar.gz &amp;&amp; tar -xf validation.tar.gz -C data/multi30k &amp;&amp; <span class=\"built_in\">rm</span> validation.tar.gz</span><br><span class=\"line\">wget http://www.quest.dcs.shef.ac.uk/wmt17_files_mmt/mmt_task1_test2016.tar.gz &amp;&amp; tar -xf mmt_task1_test2016.tar.gz -C data/multi30k &amp;&amp; <span class=\"built_in\">rm</span> mmt_task1_test2016.tar.gz</span><br></pre></td></tr></table></figure>\n<p>Step 1. Preprocess the data.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> l <span class=\"keyword\">in</span> en de; <span class=\"keyword\">do</span> <span class=\"keyword\">for</span> f <span class=\"keyword\">in</span> data/multi30k/*.<span class=\"variable\">$l</span>; <span class=\"keyword\">do</span> <span class=\"keyword\">if</span> [[ <span class=\"string\">&quot;<span class=\"variable\">$f</span>&quot;</span> != *<span class=\"string\">&quot;test&quot;</span>* ]]; <span class=\"keyword\">then</span> sed -i <span class=\"string\">&quot;$ d&quot;</span> <span class=\"variable\">$f</span>; <span class=\"keyword\">fi</span>;  <span class=\"keyword\">done</span>; <span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> l <span class=\"keyword\">in</span> en de; <span class=\"keyword\">do</span> <span class=\"keyword\">for</span> f <span class=\"keyword\">in</span> data/multi30k/*.<span class=\"variable\">$l</span>; <span class=\"keyword\">do</span> perl tools/tokenizer.perl -a -no-escape -l <span class=\"variable\">$l</span> -q  &lt; <span class=\"variable\">$f</span> &gt; <span class=\"variable\">$f</span>.atok; <span class=\"keyword\">done</span>; <span class=\"keyword\">done</span></span><br><span class=\"line\">onmt_preprocess -train_src data/multi30k/train.en.atok -train_tgt data/multi30k/train.de.atok -valid_src data/multi30k/val.en.atok -valid_tgt data/multi30k/val.de.atok -save_data data/multi30k.atok.low -lower</span><br></pre></td></tr></table></figure>\n<p>Step 2. Train the model.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onmt_train -data data/multi30k.atok.low -save_model multi30k_model -gpu_ranks 0</span><br></pre></td></tr></table></figure>\n<p>Step 3. Translate sentences.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onmt_translate -gpu 0 -model multi30k_model_*_e13.pt -src data/multi30k/test2016.en.atok -tgt data/multi30k/test2016.de.atok -replace_unk -verbose -output multi30k.test.pred.atok</span><br></pre></td></tr></table></figure>\n<p>And evaluate</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl tools/multi-bleu.perl data/multi30k/test2016.de.atok &lt; multi30k.test.pred.atok</span><br></pre></td></tr></table></figure>\n","link":"links/NLP_ability/深度学习自然语言处理/深度学习自然语言处理/机器翻译/OpenNMT-py/docs/source/extended","comments":true,"plink":"http://www.ephesus.top/links/NLP_ability/深度学习自然语言处理/深度学习自然语言处理/机器翻译/OpenNMT-py/docs/source/extended/","toc":[{"id":"translation","title":"Translation","index":"1"}],"reward":true}